# 기본 설정 (공통)
spring:
  application:
    name: inforsion-server
  
  # 활성 프로파일 설정 (환경변수나 IDE에서 오버라이드 가능)
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:inforsion_db}?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&characterEncoding=UTF-8
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:}
    driver-class-name: com.mysql.cj.jdbc.Driver
  
  jpa:
    hibernate:
      ddl-auto: update # 엔티티 클래스 기준으로 테이블 구조 자동 동기화 (CREATE/ALTER TABLE)
    show-sql: true     # 실행되는 SQL 쿼리를 콘솔에 출력
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect  # MySQL 데이터베이스 방언 설정
        format_sql: true                            # SQL 쿼리를 보기 좋게 포맷팅
    defer-datasource-initialization: true           # JPA 테이블 생성 후 data.sql 실행하도록 순서 조정
  
  # 데이터베이스 초기화 설정 (data.sql 자동 실행)
  sql:
    init:
      mode: always                      # 애플리케이션 시작시 항상 SQL 스크립트 실행
      data-locations: classpath:data.sql # 초기 데이터 삽입 SQL 파일 위치 지정
      encoding: UTF-8                   # 한글 데이터 깨짐 방지를 위한 인코딩 설정
# 파일 업로드 설정
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 50MB
      enabled: true

#AWS S3 설정
cloud:
  aws:
    region:
      static: ${AWS_REGION:ap-northeast-2}
    stack:
      auto: false
    credentials:
      access-key: ${AWS_ACCESS_KEY_ID:}
      secret-key: ${AWS_SECRET_ACCESS_KEY:}
    s3:
      bucket: ${AWS_S3_BUCKET:}

# 네이버 OCR API 설정
naver:
  ocr:
    api-url: ${NAVER_OCR_API_URL:}
    secret-key: ${NAVER_OCR_SECRET_KEY:}

# MongoDB 설정
  data:
    mongodb:
      host: ${MONGODB_HOST:localhost}
      port: ${MONGODB_PORT:27017}
      database: ${MONGODB_DATABASE:inforsion_ocr_db}
      username: ${MONGODB_USERNAME:}
      password: ${MONGODB_PASSWORD:}
      authentication-database: admin

# 기본 CORS 설정
cors:
  allowed-origins: "http://localhost:8081,http://localhost:19006"
  allowed-origins-patterns: ""

# 기본 로깅 설정
logging:
  level:
    com.inforsion.inforsionserver: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: INFO

---
# 개발 환경 설정
spring:
  config:
    activate:
      on-profile: dev

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

# 개발 환경 CORS 설정 (더 관대함)
cors:
  allowed-origins: "http://localhost:8081,http://localhost:19006,http://localhost:3000"
  allowed-origins-patterns: "http://localhost:*,http://127.0.0.1:*,http://10.0.2.2:*,http://192.168.*.*:*,exp://*"

# 개발 환경 로깅 설정
logging:
  level:
    com.inforsion.inforsionserver: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE

---
# Docker 환경 설정
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: jdbc:mysql://${DB_HOST:mysql}:${DB_PORT:3306}/${DB_NAME:inforsion_db}?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&characterEncoding=UTF-8
    username: ${DB_USERNAME:inforsion_user}
    password: ${DB_PASSWORD:inforsion_password}

  jpa:
    show-sql: false                         # Docker 환경에서는 SQL 로그 비활성화 (성능 최적화)
    defer-datasource-initialization: true   # JPA 테이블 생성 후 data.sql 실행하도록 순서 조정

  # Docker 환경 데이터베이스 초기화 설정
  sql:
    init:
      mode: always                      # Docker 컨테이너 시작시 항상 테스트 데이터 삽입
      data-locations: classpath:data.sql # 카페 테스트 데이터 (3개 매장, 재고, 메뉴 등)
      encoding: UTF-8                   # 한글 카페 데이터 깨짐 방지

  # MongoDB 설정 (Docker 환경)
  data:
    mongodb:
      host: ${MONGODB_HOST:mongodb}
      port: ${MONGODB_PORT:27017}
      database: ${MONGODB_DATABASE:inforsion_ocr_db}
      username: ${MONGODB_USERNAME:admin}
      password: ${MONGODB_PASSWORD:adminpassword}
      authentication-database: admin

# Docker 환경 CORS 설정 (개발용으로 관대하게)
cors:
  allowed-origins: "http://localhost:8080,http://127.0.0.1:8080,http://localhost:8081,http://localhost:19006"
  allowed-origins-patterns: "http://localhost:*,http://127.0.0.1:*"

# Docker 환경 로깅 설정
logging:
  level:
    com.inforsion.inforsionserver: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
  file:
    name: /app/logs/application.log

---
# RDS 환경 설정
spring:
  config:
    activate:
      on-profile: rds

  datasource:
    url: jdbc:mysql://inforsion-rds.c70uuq2mcwbq.ap-southeast-2.rds.amazonaws.com:3306/${DB_NAME:inforsion_db}?useSSL=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&characterEncoding=UTF-8
    username: ${DB_USERNAME:admin}
    password: ${DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  jpa:
    hibernate:
      ddl-auto: update                      # RDS 테이블 구조 자동 동기화
    show-sql: false                         # RDS 환경에서는 SQL 로그 비활성화 (성능상 이유)
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    defer-datasource-initialization: true   # JPA 테이블 생성 후 data.sql 실행하도록 순서 조정

  # RDS 환경 데이터베이스 초기화 설정  
  sql:
    init:
      mode: always                      # RDS 환경에서도 항상 테스트 데이터 삽입
      data-locations: classpath:data.sql # 카페 테스트 데이터 (3개 매장, 재고, 메뉴 등)
      encoding: UTF-8                   # 한글 카페 데이터 깨짐 방지

  # MongoDB 설정 (기존 유지)
  data:
    mongodb:
      host: ${MONGODB_HOST:mongodb}
      port: ${MONGODB_PORT:27017}
      database: ${MONGODB_DATABASE:inforsion_ocr_db}
      username: ${MONGODB_USERNAME:admin}
      password: ${MONGODB_PASSWORD:adminpassword}
      authentication-database: admin

# RDS 환경 CORS 설정
cors:
  allowed-origins: "http://localhost:8080,http://127.0.0.1:8080,http://localhost:8081,http://localhost:19006"
  allowed-origins-patterns: "http://localhost:*,http://127.0.0.1:*"

# RDS 환경 로깅 설정
logging:
  level:
    com.inforsion.inforsionserver: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss.SSSZ} %5p %t --- [%15.15t] %-40.40logger{39} : %m%n"
  file:
    name: /app/logs/application.log

---
# 운영 환경 설정
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT:3306}/${DB_NAME}?useSSL=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&characterEncoding=UTF-8
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: validate  # 운영환경에서는 validate 사용
    show-sql: false

# 운영 환경 CORS 설정 (보안 강화)
cors:
  allowed-origins: "${ALLOWED_ORIGINS:https://yourdomain.com,https://api.yourdomain.com}"
  allowed-origins-patterns: "${ALLOWED_ORIGIN_PATTERNS:}"

# 운영 환경 로깅 설정
logging:
  level:
    com.inforsion.inforsionserver: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /app/logs/inforsion-server.log