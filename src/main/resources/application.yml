# 기본 설정 (공통)
spring:
  application:
    name: inforsion-server
  
  # 활성 프로파일 설정 (환경변수나 IDE에서 오버라이드 가능)
  profiles:
    active: ${SPRING_PROFILES_ACTIVE:dev}
  
  datasource:
    url: jdbc:mysql://${DB_HOST:localhost}:${DB_PORT:3306}/${DB_NAME:inforsion_db}?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&characterEncoding=UTF-8
    username: ${DB_USERNAME:root}
    password: ${DB_PASSWORD:}
    driver-class-name: com.mysql.cj.jdbc.Driver
  
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true

# 기본 CORS 설정
cors:
  allowed-origins: "http://localhost:8081,http://localhost:19006"
  allowed-origins-patterns: ""

# 기본 로깅 설정
logging:
  level:
    com.inforsion.inforsionserver: INFO
    org.springframework.web: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: INFO

---
# 개발 환경 설정
spring:
  config:
    activate:
      on-profile: dev

  jpa:
    show-sql: true
    properties:
      hibernate:
        format_sql: true

# 개발 환경 CORS 설정 (더 관대함)
cors:
  allowed-origins: "http://localhost:8081,http://localhost:19006,http://localhost:3000"
  allowed-origins-patterns: "http://localhost:*,http://127.0.0.1:*,http://10.0.2.2:*,http://192.168.*.*:*,exp://*"

# 개발 환경 로깅 설정
logging:
  level:
    com.inforsion.inforsionserver: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql: TRACE

---
# Docker 환경 설정
spring:
  config:
    activate:
      on-profile: docker

  datasource:
    url: jdbc:mysql://${DB_HOST:mysql}:${DB_PORT:3306}/${DB_NAME:inforsion_db}?useSSL=false&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&characterEncoding=UTF-8
    username: ${DB_USERNAME:inforsion_user}
    password: ${DB_PASSWORD:inforsion_password}

  jpa:
    show-sql: false

# Docker 환경 로깅 설정
logging:
  level:
    com.inforsion.inforsionserver: INFO
    org.springframework.security: INFO
    org.hibernate.SQL: INFO
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
  file:
    name: /app/logs/application.log

---
# 운영 환경 설정
spring:
  config:
    activate:
      on-profile: prod

  datasource:
    url: jdbc:mysql://${DB_HOST}:${DB_PORT:3306}/${DB_NAME}?useSSL=true&serverTimezone=Asia/Seoul&allowPublicKeyRetrieval=true&characterEncoding=UTF-8
    username: ${DB_USERNAME}
    password: ${DB_PASSWORD}

  jpa:
    hibernate:
      ddl-auto: validate  # 운영환경에서는 validate 사용
    show-sql: false

# 운영 환경 CORS 설정 (보안 강화)
cors:
  allowed-origins: "${ALLOWED_ORIGINS:https://yourdomain.com,https://api.yourdomain.com}"
  allowed-origins-patterns: "${ALLOWED_ORIGIN_PATTERNS:}"

# 운영 환경 로깅 설정
logging:
  level:
    com.inforsion.inforsionserver: INFO
    org.springframework.web: WARN
    org.springframework.security: WARN
    org.hibernate.SQL: WARN
    root: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"
  file:
    name: /app/logs/inforsion-server.log