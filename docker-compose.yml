services:
  mongodb:
    image: mongo:7.0
    container_name: inforsion-mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: adminpassword
      MONGO_INITDB_DATABASE: inforsion_ocr_db
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - inforsion-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      timeout: 20s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: inforsion-redis
    ports:
      - "6379:6379"
    networks:
      - inforsion-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
    command: redis-server --appendonly yes
    volumes:
      - redis_data:/data

  app:
    build: .
    container_name: inforsion-app
    environment:
      # RDS MySQL 설정
      DB_NAME: ${DB_NAME:-inforsion_db}
      DB_USERNAME: ${DB_USERNAME:-admin}
      DB_PASSWORD: ${DB_PASSWORD}
      # MongoDB 설정
      MONGODB_HOST: mongodb
      MONGODB_PORT: 27017
      MONGODB_DATABASE: inforsion_ocr_db
      MONGODB_USERNAME: admin
      MONGODB_PASSWORD: adminpassword
      SPRING_PROFILES_ACTIVE: rds
      # AWS 설정
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION:-ap-southeast-2}
      AWS_S3_BUCKET: ${AWS_S3_BUCKET}
      # 네이버 OCR 설정
      NAVER_OCR_API_URL: ${NAVER_OCR_API_URL}
      NAVER_OCR_SECRET_KEY: ${NAVER_OCR_SECRET_KEY}
      # Redis 설정
      REDIS_HOST: redis
      REDIS_PORT: 6379
    ports:
      - "8080:8080"
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - inforsion-network
    volumes:
      - ./logs:/app/logs
    restart: unless-stopped

volumes:
  mongodb_data:
  redis_data:

networks:
  inforsion-network:
    driver: bridge